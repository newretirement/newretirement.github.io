"use strict";(self.webpackChunkdevportal=self.webpackChunkdevportal||[]).push([[271],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>u});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),h=p(r),u=a,m=h["".concat(l,".").concat(u)]||h[u]||d[u]||i;return r?n.createElement(m,s(s({ref:t},c),{},{components:r})):n.createElement(m,s({ref:t},c))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=h;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var p=2;p<i;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},6022:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));r(8209);const i={},s="Widget themes",o={unversionedId:"widgets/themes",id:"widgets/themes",title:"Widget themes",description:"NewRetirement widgets support themes through the use of CSS variables. Designers can supply color values and other substitutions to override the NewRetirement defaults. Developers can view what parts of the widget can be themed by inspecting the widget using browser development tools. Each widget has its own CSS variable prefix; the prefix for the Retirement Calculator widget, for instance, is src (for Simple Retirement Calculator).",source:"@site/docs/widgets/themes.md",sourceDirName:"widgets",slug:"/widgets/themes",permalink:"/docs/widgets/themes",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Widget roadmap",permalink:"/docs/widgets/roadmap"},next:{title:"APIs",permalink:"/docs/category/apis"}},l={},p=[{value:"Default theme",id:"default-theme",level:2},{value:"Alternate theme",id:"alternate-theme",level:2},{value:"Using theme variables",id:"using-theme-variables",level:2}],c={toc:p};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"widget-themes"},"Widget themes"),(0,a.kt)("head",null,(0,a.kt)("link",{rel:"stylesheet",href:"https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;500;600&display=swap"}),(0,a.kt)("link",{rel:"stylesheet",href:"https://use.typekit.net/pxx8wwv.css"}),(0,a.kt)("script",{type:"module",src:"https://widgets-staging.newretirement.com/retirement-calculator/index.js"})),(0,a.kt)("p",null,"NewRetirement widgets support themes through the use of CSS variables. Designers can supply color values and other substitutions to override the NewRetirement defaults. Developers can view what parts of the widget can be themed by inspecting the widget using browser development tools. Each widget has its own CSS variable prefix; the prefix for the Retirement Calculator widget, for instance, is ",(0,a.kt)("inlineCode",{parentName:"p"},"src")," (for Simple Retirement Calculator)."),(0,a.kt)("p",null,"As an example, here\u2019s the Retirement Calculator widget styled two different ways."),(0,a.kt)("h2",{id:"default-theme"},"Default theme"),(0,a.kt)("p",null,(0,a.kt)("newretirement-retirement-calculator",{variant:"full",apiKey:"AziMr2RAr06LOhAkae2IS4rEZTWErkWu3K5clxAp",url:"./rcwidget",env:"dev"})),(0,a.kt)("h2",{id:"alternate-theme"},"Alternate theme"),(0,a.kt)("div",{className:"alternate-theme"},(0,a.kt)("newretirement-retirement-calculator",{variant:"full",apiKey:"AziMr2RAr06LOhAkae2IS4rEZTWErkWu3K5clxAp",url:"./rcwidget",env:"dev"})),(0,a.kt)("h2",{id:"using-theme-variables"},"Using theme variables"),(0,a.kt)("p",null,"One approach to creating themes is to supply design system values as CSS variables, and then use those theme values in turn as definitions of the CSS variables exposed by the widget. The examples on this page\nfollow this approach."),(0,a.kt)("p",null,"Inspecting each widget\u2019s \u201cAdd additional data\u201d button with browser developer tools reveals that the button\u2019s text color is ",(0,a.kt)("inlineCode",{parentName:"p"},"---src-palette-secondary-500"),", which is defined in turn as having the design system value ",(0,a.kt)("inlineCode",{parentName:"p"},"--color-brand-secondary-500"),". However, the design system for the default theme defines ",(0,a.kt)("inlineCode",{parentName:"p"},"--color-brand-secondary-500")," as ",(0,a.kt)("inlineCode",{parentName:"p"},"#3b9a78"),", while the design system for the alternate theme defines it as ",(0,a.kt)("inlineCode",{parentName:"p"},"#eb0029"),"."),(0,a.kt)("p",null,"Note that all of the CSS variables \u2014 the variables associated with the two design systems, as well as the ",(0,a.kt)("inlineCode",{parentName:"p"},"src")," variables that modify each widget, are all local to this developer portal page. The widget code is identical for each widget; only the CSS variables are different."))}d.isMDXComponent=!0},8209:(e,t,r)=>{r(7294)}}]);